# Generated by Django 5.1.7 on 2025-03-30 02:22

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wishlist', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='支付方式名称', max_length=100)),
                ('code', models.CharField(help_text='支付方式代码', max_length=50, unique=True)),
                ('payment_type', models.CharField(choices=[('usdt', 'USDT'), ('paypal', 'PayPal'), ('credit_card', '信用卡')], help_text='支付类型', max_length=20)),
                ('description', models.TextField(blank=True, help_text='支付方式描述', null=True)),
                ('icon', models.ImageField(blank=True, help_text='支付方式图标', null=True, upload_to='payment_icons/')),
                ('is_active', models.BooleanField(default=True, help_text='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='更新时间')),
            ],
            options={
                'verbose_name': '支付方式',
                'verbose_name_plural': '支付方式',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhookLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(help_text='事件类型', max_length=100)),
                ('payload', models.JSONField(default=dict, help_text='原始请求数据')),
                ('response', models.JSONField(default=dict, help_text='响应数据')),
                ('status', models.CharField(default='pending', help_text='处理状态', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
            ],
            options={
                'verbose_name': 'Webhook日志',
                'verbose_name_plural': 'Webhook日志',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, help_text='支付金额', max_digits=10)),
                ('currency', models.CharField(default='USD', help_text='货币', max_length=10)),
                ('status', models.CharField(choices=[('pending', '待处理'), ('processing', '处理中'), ('completed', '已完成'), ('failed', '失败'), ('cancelled', '已取消')], default='pending', help_text='支付状态', max_length=20)),
                ('status_message', models.CharField(blank=True, help_text='状态消息', max_length=255, null=True)),
                ('payment_data', models.JSONField(default=dict, help_text='支付相关数据')),
                ('is_anonymous', models.BooleanField(default=False, help_text='是否匿名支付')),
                ('payer_email', models.EmailField(blank=True, help_text='付款人邮箱', max_length=254, null=True)),
                ('payer_name', models.CharField(blank=True, help_text='付款人姓名', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='更新时间')),
                ('completed_at', models.DateTimeField(blank=True, help_text='完成时间', null=True)),
                ('payer', models.ForeignKey(blank=True, help_text='付款人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('wishlist_item', models.ForeignKey(help_text='关联的心愿单物品', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='wishlist.wishlistitem')),
                ('payment_method', models.ForeignKey(help_text='支付方式', on_delete=django.db.models.deletion.PROTECT, to='payment.paymentmethod')),
            ],
            options={
                'verbose_name': '支付记录',
                'verbose_name_plural': '支付记录',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditCardPaymentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processor', models.CharField(default='stripe', help_text='处理器', max_length=50)),
                ('transaction_id', models.CharField(blank=True, help_text='交易ID', max_length=255, null=True)),
                ('card_type', models.CharField(blank=True, help_text='卡类型', max_length=50, null=True)),
                ('last_four', models.CharField(blank=True, help_text='卡号后四位', max_length=4, null=True)),
                ('fee_amount', models.DecimalField(decimal_places=2, default=0, help_text='手续费', max_digits=10)),
                ('payment', models.OneToOneField(help_text='关联的支付记录', on_delete=django.db.models.deletion.CASCADE, related_name='credit_card_details', to='payment.payment')),
            ],
            options={
                'verbose_name': '信用卡支付详情',
                'verbose_name_plural': '信用卡支付详情',
            },
        ),
        migrations.CreateModel(
            name='PayPalPaymentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paypal_order_id', models.CharField(blank=True, help_text='PayPal订单ID', max_length=255, null=True)),
                ('paypal_payer_id', models.CharField(blank=True, help_text='PayPal付款人ID', max_length=255, null=True)),
                ('payment_link', models.URLField(blank=True, help_text='支付链接', null=True)),
                ('fee_amount', models.DecimalField(decimal_places=2, default=0, help_text='手续费', max_digits=10)),
                ('payment', models.OneToOneField(help_text='关联的支付记录', on_delete=django.db.models.deletion.CASCADE, related_name='paypal_details', to='payment.payment')),
            ],
            options={
                'verbose_name': 'PayPal支付详情',
                'verbose_name_plural': 'PayPal支付详情',
            },
        ),
        migrations.CreateModel(
            name='USDTPaymentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_address', models.CharField(help_text='钱包地址', max_length=255)),
                ('network', models.CharField(default='trc20', help_text='USDT网络', max_length=20)),
                ('transaction_hash', models.CharField(blank=True, help_text='交易哈希', max_length=255, null=True)),
                ('sender_address', models.CharField(blank=True, help_text='发送地址', max_length=255, null=True)),
                ('confirmation_count', models.PositiveIntegerField(default=0, help_text='确认次数')),
                ('qr_code', models.ImageField(blank=True, help_text='支付二维码', null=True, upload_to='payment_qrcodes/')),
                ('payment', models.OneToOneField(help_text='关联的支付记录', on_delete=django.db.models.deletion.CASCADE, related_name='usdt_details', to='payment.payment')),
            ],
            options={
                'verbose_name': 'USDT支付详情',
                'verbose_name_plural': 'USDT支付详情',
            },
        ),
    ]
